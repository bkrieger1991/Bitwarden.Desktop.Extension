<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>